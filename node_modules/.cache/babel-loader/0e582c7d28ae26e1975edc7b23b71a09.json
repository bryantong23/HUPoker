{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bryan/Documents/HUPoker/src/components/hand.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.evaluateHoleCards = holeCards => {\n      var card1 = holeCards[0].code;\n      var card2 = holeCards[1].code;\n      if (card1.substring(0, 1) === card2.substring(0, 1)) return \"Pair of \" + card1.substring(0, 1) + \"s\";else {\n        if (this.state.values.indexOf(card1.substring(0, 1)) > this.state.values.indexOf(card2.substring(0, 1))) {\n          return card1.substring(0, 1) + \" high\";\n        } else return card2.substring(0, 1) + \" high\";\n      }\n    };\n\n    this.evaluateFlop = (holeCards, flop) => {\n      var cards = [];\n\n      for (var i = 0; i < holeCards.length; i++) {\n        cards.push(holeCards[i].code);\n      }\n\n      for (var i = 0; i < flop.length; i++) {\n        cards.push(flop[i].code);\n      }\n    };\n\n    this.evaluateTurn = (holeCards, flop, turn) => {};\n\n    this.evaluateRiver = (holeCards, flop, turn, river) => {};\n\n    this.displayHand = (dealHoleCards, dealFlop, dealTurn, dealRiver, holeCards, flop, turn, river) => {\n      if (!dealHoleCards) return null;else if (!dealFlop) {\n        return this.evaluateHoleCards(holeCards);\n      } else if (!dealTurn) {\n        return this.evaluateFlop(holeCards, flop);\n      } else if (!dealRiver) {\n        return this.evaluateTurn(holeCards, flop, turn);\n      } else {\n        return this.evaluateRiver(holeCards, flop, turn, river);\n      }\n    };\n\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: this.props.flop,\n      turn: this.props.turn,\n      river: this.props.river,\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"]\n    };\n  } // handName = (holeCards, flop, turn, river) => {\n  //   console.log(flop);\n  //   this.setState({\n  //     holeCards: this.props.holeCards,\n  //     flop: this.props.flop,\n  //     turn: this.props.turn,\n  //     river: this.props.river,\n  //   });\n  //   if (this.state.flop.length === 0) {\n  //     return this.evaluateHoleCards(this.state.holeCards);\n  //   } else if (this.state.turn.length === 0) {\n  //     return this.evaluateFlop(this.state.holeCards, this.state.flop);\n  //   } else if (this.state.river.length === 0) {\n  //     return this.evaluateTurn(\n  //       this.state.holeCards,\n  //       this.state.flop,\n  //       this.state.turn\n  //     );\n  //   } else {\n  //     return this.evaluateRiver(\n  //       this.state.holeCards,\n  //       this.state.flop,\n  //       this.state.turn,\n  //       this.state.river\n  //     );\n  //   }\n  // };\n\n\n  isRoyalFlush(cards) {\n    if (this.isStraightFlush(cards)) {\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].includes(\"A\")) return true;\n      }\n    }\n\n    return false;\n  }\n\n  isStraightFlush(cards) {\n    if (this.isFlush(cards) && this.isStraight(cards)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isFourOfAKind(cards) {}\n\n  isFullHouse(cards) {}\n\n  isFlush(cards) {\n    for (var i = 0; i < cards.length - 1; i++) {\n      if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n    }\n\n    return true;\n  }\n\n  isStraight(cards) {}\n\n  isTrips(cards) {}\n\n  isTwoPair(cards) {}\n\n  isPair(cards) {}\n\n  render() {\n    const {\n      dealHoleCards,\n      dealFlop,\n      dealTurn,\n      dealRiver,\n      holeCards,\n      flop,\n      turn,\n      river\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dealHoleCards ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.displayHand(dealHoleCards, dealFlop, dealTurn, dealRiver, holeCards, flop, turn, river)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Hand;","map":{"version":3,"sources":["/Users/bryan/Documents/HUPoker/src/components/hand.jsx"],"names":["React","Component","Hand","constructor","props","evaluateHoleCards","holeCards","card1","code","card2","substring","state","values","indexOf","evaluateFlop","flop","cards","i","length","push","evaluateTurn","turn","evaluateRiver","river","displayHand","dealHoleCards","dealFlop","dealTurn","dealRiver","isRoyalFlush","isStraightFlush","includes","isFlush","isStraight","isFourOfAKind","isFullHouse","substr","isTrips","isTwoPair","isPair","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: this.props.flop,\n      turn: this.props.turn,\n      river: this.props.river,\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"],\n    };\n  }\n\n  // handName = (holeCards, flop, turn, river) => {\n  //   console.log(flop);\n  //   this.setState({\n  //     holeCards: this.props.holeCards,\n  //     flop: this.props.flop,\n  //     turn: this.props.turn,\n  //     river: this.props.river,\n  //   });\n  //   if (this.state.flop.length === 0) {\n  //     return this.evaluateHoleCards(this.state.holeCards);\n  //   } else if (this.state.turn.length === 0) {\n  //     return this.evaluateFlop(this.state.holeCards, this.state.flop);\n  //   } else if (this.state.river.length === 0) {\n  //     return this.evaluateTurn(\n  //       this.state.holeCards,\n  //       this.state.flop,\n  //       this.state.turn\n  //     );\n  //   } else {\n  //     return this.evaluateRiver(\n  //       this.state.holeCards,\n  //       this.state.flop,\n  //       this.state.turn,\n  //       this.state.river\n  //     );\n  //   }\n  // };\n\n  evaluateHoleCards = (holeCards) => {\n    var card1 = holeCards[0].code;\n    var card2 = holeCards[1].code;\n    if (card1.substring(0, 1) === card2.substring(0, 1))\n      return \"Pair of \" + card1.substring(0, 1) + \"s\";\n    else {\n      if (\n        this.state.values.indexOf(card1.substring(0, 1)) >\n        this.state.values.indexOf(card2.substring(0, 1))\n      ) {\n        return card1.substring(0, 1) + \" high\";\n      } else return card2.substring(0, 1) + \" high\";\n    }\n  };\n\n  evaluateFlop = (holeCards, flop) => {\n    var cards = [];\n    for (var i = 0; i < holeCards.length; i++) {\n      cards.push(holeCards[i].code);\n    }\n    for (var i = 0; i < flop.length; i++) {\n      cards.push(flop[i].code);\n    }\n  };\n\n  evaluateTurn = (holeCards, flop, turn) => {};\n\n  evaluateRiver = (holeCards, flop, turn, river) => {};\n\n  isRoyalFlush(cards) {\n    if (this.isStraightFlush(cards)) {\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].includes(\"A\")) return true;\n      }\n    }\n    return false;\n  }\n\n  isStraightFlush(cards) {\n    if (this.isFlush(cards) && this.isStraight(cards)) {\n      return true;\n    }\n    return false;\n  }\n\n  isFourOfAKind(cards) {}\n\n  isFullHouse(cards) {}\n\n  isFlush(cards) {\n    for (var i = 0; i < cards.length - 1; i++) {\n      if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n    }\n    return true;\n  }\n\n  isStraight(cards) {}\n\n  isTrips(cards) {}\n\n  isTwoPair(cards) {}\n\n  isPair(cards) {}\n\n  displayHand = (\n    dealHoleCards,\n    dealFlop,\n    dealTurn,\n    dealRiver,\n    holeCards,\n    flop,\n    turn,\n    river\n  ) => {\n    if (!dealHoleCards) return null;\n    else if (!dealFlop) {\n      return this.evaluateHoleCards(holeCards);\n    } else if (!dealTurn) {\n      return this.evaluateFlop(holeCards, flop);\n    } else if (!dealRiver) {\n      return this.evaluateTurn(holeCards, flop, turn);\n    } else {\n      return this.evaluateRiver(holeCards, flop, turn, river);\n    }\n  };\n\n  render() {\n    const {\n      dealHoleCards,\n      dealFlop,\n      dealTurn,\n      dealRiver,\n      holeCards,\n      flop,\n      turn,\n      river,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <span>\n          {dealHoleCards ? (\n            <p>\n              {this.displayHand(\n                dealHoleCards,\n                dealFlop,\n                dealTurn,\n                dealRiver,\n                holeCards,\n                flop,\n                turn,\n                river\n              )}\n            </p>\n          ) : null}\n        </span>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Hand;\n"]},"metadata":{},"sourceType":"module"}