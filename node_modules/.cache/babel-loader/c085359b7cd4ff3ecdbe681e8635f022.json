{"ast":null,"code":"var values = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"]; // class Card {\n//     constructor (card) {\n//         this.value = card.substr(0, 1);\n//         this.suit = str.substr(1);\n//         this.rank = values.indexOf(this.value);\n//     }\n// }\n\nclass Hand {\n  //  constructor(cards) {\n  //      this.cards = cards;\n  //      this.handDescr = \"\";\n  // }\n  getHandStrength(cards) {\n    if (this.isRoyalFlush(cards)) return 9;\n    if (this.isStraightFlush(cards)) return 8;\n    if (this.isFourOfAKind(cards)) return 7;\n    if (this.isFullHouse(cards)) return 6;\n    if (this.isFlush(cards)) return 5;\n    if (this.isStraight(cards)) return 4;\n    if (this.isTrips(cards)) return 3;\n    if (this.isTwoPair(cards)) return 2;\n    if (this.isPair(cards)) return 1;else return 0;\n  }\n\n  isRoyalFlush(cards) {\n    if (this.isStraightFlush(cards)) {\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].includes(\"A\")) return true;\n      }\n    }\n\n    return false;\n  }\n\n  isStraightFlush(cards) {\n    if (this.isFlush(cards) && this.isStraight(cards)) {\n      for (var i = 0; i < cards.length - 1; i++) {\n        if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  isFourOfAKind(cards) {}\n\n  isFullHouse(cards) {}\n\n  isFlush(cards) {\n    for (var i = 0; i < cards.length - 1; i++) {\n      if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n    }\n\n    return true;\n  }\n\n  isStraight(cards) {}\n\n  isTrips(cards) {}\n\n  isTwoPair(cards) {}\n\n  isPair(cards) {}\n\n}","map":{"version":3,"sources":["/Users/bryan/Documents/HUPoker/src/HandEvaluator.js"],"names":["values","Hand","getHandStrength","cards","isRoyalFlush","isStraightFlush","isFourOfAKind","isFullHouse","isFlush","isStraight","isTrips","isTwoPair","isPair","i","length","includes","substr"],"mappings":"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","sourcesContent":["var values = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"];\n\n// class Card {\n//     constructor (card) {\n//         this.value = card.substr(0, 1);\n//         this.suit = str.substr(1);\n//         this.rank = values.indexOf(this.value);\n\n//     }\n// }\n\nclass Hand {\n        \n    //  constructor(cards) {\n    //      this.cards = cards;\n    //      this.handDescr = \"\";\n    // }\n\n    getHandStrength(cards) {\n        if (this.isRoyalFlush(cards)) return 9;\n        if (this.isStraightFlush(cards)) return 8;\n        if (this.isFourOfAKind(cards)) return 7;\n        if (this.isFullHouse(cards)) return 6;\n        if (this.isFlush(cards)) return 5;\n        if (this.isStraight(cards)) return 4;\n        if (this.isTrips(cards)) return 3;\n        if (this.isTwoPair(cards)) return 2;\n        if (this.isPair(cards)) return 1;\n        else return 0;\n    }\n\n    isRoyalFlush(cards) {\n        if (this.isStraightFlush(cards)){\n            for (var i = 0; i < cards.length; i++){\n                if (cards[i].includes(\"A\")) return true;\n            }\n        }\n        return false;\n\n    }\n\n    isStraightFlush(cards) {\n        if (this.isFlush(cards) && this.isStraight(cards)){\n            for (var i = 0; i < cards.length - 1; i++){\n                if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n            }\n            return true;\n        }\n        return false;\n\n    }\n\n    isFourOfAKind(cards) {\n\n    }\n\n    isFullHouse(cards) {\n\n    }\n\n    isFlush(cards) {\n        for (var i = 0; i < cards.length - 1; i++){\n            if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n        }\n        return true;\n    }\n\n    isStraight(cards) {\n\n    }\n\n    isTrips(cards) {\n\n    }\n\n    isTwoPair(cards) {\n\n    }\n\n    isPair(cards){\n\n    }\n}"]},"metadata":{},"sourceType":"module"}