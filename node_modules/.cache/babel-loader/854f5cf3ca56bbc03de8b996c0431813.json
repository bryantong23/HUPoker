{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bryan/Documents/HUPoker/src/components/hand.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handName = (holeCards, flop, turn, river) => {\n      console.log(flop);\n      this.setState({\n        holeCards: this.props.holeCards,\n        flop: this.props.flop,\n        turn: this.props.turn,\n        river: this.props.river\n      });\n\n      if (this.state.flop.length === 0) {\n        return this.evaluateHoleCards(this.state.holeCards);\n      } else if (this.state.turn.length === 0) {\n        return this.evaluateFlop(this.state.holeCards, this.state.flop);\n      } else if (this.state.river.length === 0) {\n        return this.evaluateTurn(this.state.holeCards, this.state.flop, this.state.turn);\n      } else {\n        return this.evaluateRiver(this.state.holeCards, this.state.flop, this.state.turn, this.state.river);\n      }\n    };\n\n    this.evaluateHoleCards = holeCards => {\n      console.log(holeCards);\n      var card1 = holeCards[0].code;\n      var card2 = holeCards[1].code;\n      if (card1.substring(0, 1) === card2.substring(0, 1)) return \"Pair of \" + card1.substring(0, 1) + \"s\";else {\n        if (this.state.values.indexOf(card1.substring(0, 1)) > this.state.values.indexOf(card2.substring(0, 1))) {\n          return card1.substring(0, 1) + \" high\";\n        } else return card2.substring(0, 1) + \" high\";\n      }\n    };\n\n    this.evaluateFlop = (holeCards, flop) => {\n      console.log(flop);\n      console.log(\"test1\");\n    };\n\n    this.evaluateTurn = (holeCards, flop, turn) => {};\n\n    this.evaluateRiver = (holeCards, flop, turn, river) => {};\n\n    this.displayHand = (dealHoleCards, dealFlop, dealTurn, dealRiver, holeCards, flop, turn, river) => {\n      if (!dealHoleCards) return null;else if (!dealFlop) {\n        return this.evaluateHoleCards(holeCards);\n      } else if (!dealTurn) {\n        return this.evaluateFlop(holeCards, flop);\n      } else if (!dealRiver) {\n        return this.evaluateTurn(holeCards, flop, turn);\n      } else {\n        return this.evaluateRiver(holeCards, flop, turn, river);\n      }\n    };\n\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: this.props.flop,\n      turn: this.props.turn,\n      river: this.props.river,\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"]\n    };\n  }\n\n  isRoyalFlush(cards) {\n    if (this.isStraightFlush(cards)) {\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].includes(\"A\")) return true;\n      }\n    }\n\n    return false;\n  }\n\n  isStraightFlush(cards) {\n    if (this.isFlush(cards) && this.isStraight(cards)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isFourOfAKind(cards) {}\n\n  isFullHouse(cards) {}\n\n  isFlush(cards) {\n    for (var i = 0; i < cards.length - 1; i++) {\n      if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n    }\n\n    return true;\n  }\n\n  isStraight(cards) {}\n\n  isTrips(cards) {}\n\n  isTwoPair(cards) {}\n\n  isPair(cards) {}\n\n  render() {\n    const {\n      dealHoleCards,\n      dealFlop,\n      dealTurn,\n      dealRiver,\n      holeCards,\n      flop,\n      turn,\n      river\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dealHoleCards ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.displayHand(dealHoleCards, dealFlop, dealTurn, dealRiver, holeCards, flop, turn, river)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Hand;","map":{"version":3,"sources":["/Users/bryan/Documents/HUPoker/src/components/hand.jsx"],"names":["React","Component","Hand","constructor","props","handName","holeCards","flop","turn","river","console","log","setState","state","length","evaluateHoleCards","evaluateFlop","evaluateTurn","evaluateRiver","card1","code","card2","substring","values","indexOf","displayHand","dealHoleCards","dealFlop","dealTurn","dealRiver","isRoyalFlush","cards","isStraightFlush","i","includes","isFlush","isStraight","isFourOfAKind","isFullHouse","substr","isTrips","isTwoPair","isPair","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: this.props.flop,\n      turn: this.props.turn,\n      river: this.props.river,\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"],\n    };\n  }\n\n  handName = (holeCards, flop, turn, river) => {\n    console.log(flop);\n    this.setState({\n      holeCards: this.props.holeCards,\n      flop: this.props.flop,\n      turn: this.props.turn,\n      river: this.props.river,\n    });\n    if (this.state.flop.length === 0) {\n      return this.evaluateHoleCards(this.state.holeCards);\n    } else if (this.state.turn.length === 0) {\n      return this.evaluateFlop(this.state.holeCards, this.state.flop);\n    } else if (this.state.river.length === 0) {\n      return this.evaluateTurn(\n        this.state.holeCards,\n        this.state.flop,\n        this.state.turn\n      );\n    } else {\n      return this.evaluateRiver(\n        this.state.holeCards,\n        this.state.flop,\n        this.state.turn,\n        this.state.river\n      );\n    }\n  };\n\n  evaluateHoleCards = (holeCards) => {\n    console.log(holeCards);\n    var card1 = holeCards[0].code;\n    var card2 = holeCards[1].code;\n    if (card1.substring(0, 1) === card2.substring(0, 1))\n      return \"Pair of \" + card1.substring(0, 1) + \"s\";\n    else {\n      if (\n        this.state.values.indexOf(card1.substring(0, 1)) >\n        this.state.values.indexOf(card2.substring(0, 1))\n      ) {\n        return card1.substring(0, 1) + \" high\";\n      } else return card2.substring(0, 1) + \" high\";\n    }\n  };\n\n  evaluateFlop = (holeCards, flop) => {\n    console.log(flop);\n    console.log(\"test1\");\n  };\n\n  evaluateTurn = (holeCards, flop, turn) => {};\n\n  evaluateRiver = (holeCards, flop, turn, river) => {};\n\n  isRoyalFlush(cards) {\n    if (this.isStraightFlush(cards)) {\n      for (var i = 0; i < cards.length; i++) {\n        if (cards[i].includes(\"A\")) return true;\n      }\n    }\n    return false;\n  }\n\n  isStraightFlush(cards) {\n    if (this.isFlush(cards) && this.isStraight(cards)) {\n      return true;\n    }\n    return false;\n  }\n\n  isFourOfAKind(cards) {}\n\n  isFullHouse(cards) {}\n\n  isFlush(cards) {\n    for (var i = 0; i < cards.length - 1; i++) {\n      if (cards[i].substr(1) !== cards[i + 1].substr(1)) return false;\n    }\n    return true;\n  }\n\n  isStraight(cards) {}\n\n  isTrips(cards) {}\n\n  isTwoPair(cards) {}\n\n  isPair(cards) {}\n\n  displayHand = (\n    dealHoleCards,\n    dealFlop,\n    dealTurn,\n    dealRiver,\n    holeCards,\n    flop,\n    turn,\n    river\n  ) => {\n    if (!dealHoleCards) return null;\n    else if (!dealFlop) {\n      return this.evaluateHoleCards(holeCards);\n    } else if (!dealTurn) {\n      return this.evaluateFlop(holeCards, flop);\n    } else if (!dealRiver) {\n      return this.evaluateTurn(holeCards, flop, turn);\n    } else {\n      return this.evaluateRiver(holeCards, flop, turn, river);\n    }\n  };\n\n  render() {\n    const {\n      dealHoleCards,\n      dealFlop,\n      dealTurn,\n      dealRiver,\n      holeCards,\n      flop,\n      turn,\n      river,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <span>\n          {dealHoleCards ? (\n            <p>\n              {this.displayHand(\n                dealHoleCards,\n                dealFlop,\n                dealTurn,\n                dealRiver,\n                holeCards,\n                flop,\n                turn,\n                river\n              )}\n            </p>\n          ) : null}\n        </span>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Hand;\n"]},"metadata":{},"sourceType":"module"}