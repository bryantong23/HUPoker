{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bryan/Documents/HUPoker/src/components/hand.jsx\";\nimport React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handName = (holeCards, flop, turn, river) => {\n      if (this.state.flop.length === 0) return this.evaluateHoleCards(this.state.holeCards);else if (this.state.turn.length === 0) return this.evaluateFlop(this.state.holeCards, this.state.flop);else if (this.state.river.length === 0) return this.evaluateTurn(this.state.holeCards, this.state.flop, this.state.turn);else return this.evaluateRiver(this.state.holeCards, this.state.flop, this.state.turn, this.state.river);\n    };\n\n    this.evaluateHoleCards = holeCards => {\n      var card1 = holeCards[0].code;\n      var card2 = holeCards[1].code;\n      if (card1.substring(0, 1) === card2.substring(0, 1)) return \"Pair of \" + card1.substring(0, 1) + \"s\";else {\n        if (this.state.values.indexOf(card1.substring(0, 1)) > this.state.values.indexOf(card2.substring(0, 1))) {\n          return card1.substring(0, 1) + \" high\";\n        } else return card2.substring(0, 1) + \" high\";\n      }\n    };\n\n    this.evaluateFlop = (holeCards, flop) => {};\n\n    this.evaluateTurn = (holeCards, flop, turn) => {};\n\n    this.evaluateRiver = (holeCards, flop, turn, river) => {};\n\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: [],\n      turn: [],\n      river: [],\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"]\n    };\n  }\n\n  render() {\n    const {\n      dealHoleCards,\n      holeCards,\n      flop,\n      turn,\n      river\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: dealHoleCards ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.handName()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 32\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Hand;","map":{"version":3,"sources":["/Users/bryan/Documents/HUPoker/src/components/hand.jsx"],"names":["React","Component","Hand","constructor","props","handName","holeCards","flop","turn","river","state","length","evaluateHoleCards","evaluateFlop","evaluateTurn","evaluateRiver","card1","code","card2","substring","values","indexOf","render","dealHoleCards"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Hand extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      holeCards: this.props.holeCards,\n      flop: [],\n      turn: [],\n      river: [],\n      values: [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"J\", \"Q\", \"K\", \"A\"],\n    };\n  }\n\n  handName = (holeCards, flop, turn, river) => {\n    if (this.state.flop.length === 0)\n      return this.evaluateHoleCards(this.state.holeCards);\n    else if (this.state.turn.length === 0)\n      return this.evaluateFlop(this.state.holeCards, this.state.flop);\n    else if (this.state.river.length === 0)\n      return this.evaluateTurn(\n        this.state.holeCards,\n        this.state.flop,\n        this.state.turn\n      );\n    else\n      return this.evaluateRiver(\n        this.state.holeCards,\n        this.state.flop,\n        this.state.turn,\n        this.state.river\n      );\n  };\n\n  evaluateHoleCards = (holeCards) => {\n    var card1 = holeCards[0].code;\n    var card2 = holeCards[1].code;\n    if (card1.substring(0, 1) === card2.substring(0, 1))\n      return \"Pair of \" + card1.substring(0, 1) + \"s\";\n    else {\n      if (\n        this.state.values.indexOf(card1.substring(0, 1)) >\n        this.state.values.indexOf(card2.substring(0, 1))\n      ) {\n        return card1.substring(0, 1) + \" high\";\n      } else return card2.substring(0, 1) + \" high\";\n    }\n  };\n\n  evaluateFlop = (holeCards, flop) => {};\n\n  evaluateTurn = (holeCards, flop, turn) => {};\n\n  evaluateRiver = (holeCards, flop, turn, river) => {};\n\n  render() {\n    const { dealHoleCards, holeCards, flop, turn, river } = this.props;\n    return (\n      <React.Fragment>\n        <span>{dealHoleCards ? <p>{this.handName()}</p> : null}</span>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Hand;\n"]},"metadata":{},"sourceType":"module"}